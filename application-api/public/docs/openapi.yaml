openapi: 3.0.3
info:
  title: 'Web Crawler API Docs'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/login:
    post:
      summary: 'Handle an incoming authentication request.'
      operationId: handleAnIncomingAuthenticationRequest
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: nicola.kassulke@example.com
                password:
                  type: string
                  description: ''
                  example: '~P]ge6+UR{ZzG%P'
              required:
                - email
                - password
      security: []
  /api/keywords:
    get:
      summary: 'Get all keywords from the database'
      operationId: getAllKeywordsFromTheDatabase
      description: ''
      parameters:
        -
          in: query
          name: search
          description: 'To Filter the keywords, optionally'
          example: sequi
          required: false
          schema:
            type: string
            description: 'To Filter the keywords, optionally'
            example: sequi
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Keyword management'
      security: []
  '/api/keywords/{keyword_id}':
    get:
      summary: 'Get a keyword by ID from the database'
      operationId: getAKeywordByIDFromTheDatabase
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Keyword management'
      security: []
    parameters:
      -
        in: path
        name: keyword_id
        description: 'The ID of the keyword.'
        example: 1
        required: true
        schema:
          type: integer
  /api/spider:
    post:
      summary: ''
      operationId: postApiSpider
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Spider AIP endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: ''
                  example: 'http://mayer.org/recusandae-odio-quidem-ratione-temporibus-aut-aut.html'
              required:
                - url
      security: []
  /api/spider/callback:
    post:
      summary: 'Save the spider results to the database from callback URL'
      operationId: saveTheSpiderResultsToTheDatabaseFromCallbackURL
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Spider AIP endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                keyword:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jbymmppxrboioxp
                total_result:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: khvuyjvs
                user_id:
                  type: integer
                  description: ''
                  example: 6
                contents:
                  type: array
                  description: ''
                  example:
                    - id
                  items:
                    type: string
              required:
                - keyword
                - user_id
                - contents
      security: []
tags:
  -
    name: Endpoints
    description: ''
  -
    name: 'Keyword management'
    description: ''
  -
    name: 'Spider AIP endpoints'
    description: ''
